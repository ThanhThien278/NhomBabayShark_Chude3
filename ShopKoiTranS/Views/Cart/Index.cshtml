@model ShopKoiTranS.Models.ViewModel.CartViewModel

@{
    Layout = null;
}

<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Giỏ Hàng</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="~/css/cart.css">
    <style>
      

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(to bottom, #f9f9fb, #e3e8f0);
            margin: 0;
            padding: 0;
            color: #2c3e50;
        }

        .container {
            max-width: 1200px;
            margin: 40px auto;
            padding: 20px;
            background: #ffffff;
            border-radius: 15px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
            transition: box-shadow 0.3s ease;
            margin-left:400px;
        }

            .container:hover {
                box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
            }

        h2, h3, h4 {
            color: #34495e;
        }

        h2 {
            font-size: 28px;
            font-weight: 600;
        }

        h3 {
            font-size: 24px;
            font-weight: 500;
            margin-top: 40px;
        }

            h3 strong {
                font-weight: 600;
            }

        h4 {
            font-size: 20px;
            color: #27ae60;
            font-weight: bold;
        }

        .table {
            width: 100%;
            margin-bottom: 30px;
            border-collapse: collapse;
            background: #f9fbfd;
            border-radius: 8px;
            overflow: hidden;
        }


            .table th, .table td {
                padding: 12px 18px;
                text-align: left;
                font-size: 14px;
                border: 1px solid #ddd;
            }

            .table th {
                background: #74b9ff;
                color: white;
                font-weight: bold;
                text-transform: uppercase;
            }


            .table tbody tr {
                border-bottom: 1px solid #e1e4ea;
            }

                .table tbody tr:nth-child(even) {
                    background: #f3f6fa;
                }

                .table tbody tr:hover {
                    background: #e1f0ff;
                }


        .form-control {
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 5px;
            width: 100px;
            text-align: center;
            font-size: 14px;
            transition: border-color 0.3s ease;
        }

            .form-control:focus {
                border-color: #3498db;
                outline: none;
            }

        .btn {
            padding: 10px 15px;
            font-size: 14px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-success {
            background: linear-gradient(to right, #2ecc71, #27ae60);
            color: white;
        }

        .btn-danger {
            background: linear-gradient(to right, #e74c3c, #c0392b);
            color: white;
        }

        .btn:hover {
            opacity: 0.8;
        }

        .payment-section {
            margin-top: 30px;
            padding: 20px;
            border-top: 2px solid #dfe4ea;
            text-align: right;
        }

        .total-price {
            font-size: 22px;color: #2980b9;
            font-weight: bold;
        }

        #notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(to right, #ff6f61, #e84118);
            color: #fff;
            padding: 15px 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            display: none;
        }

        #notification.show {
            display: block;
            animation: fadeInOut 3s ease;
        }


    </style>
</head>
@Html.Partial("_SideBar")
<div class="container">
    <h2>Giỏ Hàng Của Bạn</h2>

    <!-- Cart Table -->
    <table class="table cart-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Tên cá</th>
                <th>Giá</th>
                <th>Số lượng</th>
                <th>Thành tiền</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr id="cart-item-@item.KoiId">
                    <td>@item.KoiId</td>
                    <td>@item.KoiName</td>
                    <td>@item.Price</td>
                    <td>
                        <input type="number" value="@item.Quantity" min="1"
                               class="form-control quantity-input"
                               data-item-id="@item.KoiId"
                               onchange="updateQuantity(@item.KoiId)" />
                    </td>
                    <td id="item-total-@item.KoiId">@item.TotalPrice</td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeItem(@item.KoiId)">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Advise Table -->
    <h3>Danh sách Tư vấn</h3>
    <table class="table advise-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Tên Khách Hàng</th>
                <th>Số Điện Thoại</th>
                <th>Địa điểm</th>
                <th>Mô tả</th>
                <th>Trạng Thái</th>
                <th>Ngày tư vấn</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var advise in Model.Advises)
            {
                <tr id="advise-item-@advise.AdviseId">
                    <td>@advise.AdviseId</td>
                    <td>@advise.CustomerName</td>
                    <td>@advise.CustomerPhone</td>
                    <td>@advise.DiaDiem</td>
                    <td>@advise.MoTa</td>
                    <td>@advise.TrangThai</td>
                    <td>@advise.ThoiGianTuVan</td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeAdvise(@advise.AdviseId)">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Transport Table -->
    <h3>Danh sách Vận chuyển</h3>
    <table class="table transport-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Tên Khách Hàng</th>
                <th>Số Điện Thoại</th>
                <th>Loại Cá</th>
                <th>Tên Cá</th>
                <th>Cân Nặng (kg)</th>
                <th>Số lượng cá</th>
                <th>Địa Điểm Xuất Phát</th>
                <th>Địa Điểm Đến</th>
                <th>Phương Tiện Vận Chuyển</th>
                <th>Khoảng Cách (km)</th>
                <th>Ngày Tạo</th>
                <th>Giá</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transport in Model.Transports)
            {
                <tr id="transport-item-@transport.TransportId">
                    <td>@transport.TransportId</td>
                    <td>@transport.CustomerName</td>
                    <td>@transport.CustomerPhone</td>
                    <td>@transport.LoaiCa</td>
                    <td>@transport.TenCa</td>
                    <td>@transport.CanNang</td>
                    <td>@transport.SoLuongCa</td>
                    <td>@transport.DiaDiemXuatPhat</td>
                    <td>@transport.DiaDiemDen</td>
                    <td>@transport.PhuongTienVanChuyen</td>
                    <td>@transport.Distance</td>
                    <td>@transport.CreatedAt.ToString("dd/MM/yyyy")</td>
                    <td>@transport.TransportPrice</td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeTransport(@transport.TransportId)">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Grand Total and Payment -->
    <div class="payment-section">
        <h4>Tổng tiền:</h4>
        <div class="total-price" id="grand-total">@Model.GrandTotal</div>
        <form method="post" action="@Url.Action("Index", "KoiWorld")">
            <button type="submit" class="btn btn-success">Thanh Toán</button>
        </form>
    </div>
</div>

<script>
    // Remove item from cart
    function removeItem(itemId) {
        fetch(`/Cart/RemoveItem`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId: itemId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById(`cart-item-${itemId}`).remove();
                    updateGrandTotal();
                    alert(data.message);
                } else {
                    alert(data.message);
                }
            })
            .catch(error => alert('Có lỗi xảy ra!'));
    }

    // Remove advise
    function removeAdvise(adviseId) {
        fetch(`/Cart/RemoveAdvise`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ AdviseId: adviseId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById(`advise-item-${adviseId}`).remove();
                    updateGrandTotal();
                    alert(data.message);
                } else {
                    alert(data.message);
                }
            })
            .catch(error => alert('Có lỗi xảy ra!'));
    }

    // Remove transport
    function removeTransport(transportId) {
        fetch(`/Cart/RemoveTransport`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ TransportId: transportId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById(`transport-item-${transportId}`).remove();
                    updateGrandTotal();
                    alert(data.message);
                } else {
                    alert(data.message);
                }
            })
            .catch(error => alert('Có lỗi xảy ra!'));
    }

    // Update total price when quantity changes
    function updateQuantity(itemId) {
        let quantity = document.querySelector(`.quantity-input[data-item-id="${itemId}"]`).value;
        fetch(`/Cart/UpdateQuantity`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId: itemId, quantity: quantity })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById(`item-total-${itemId}`).textContent = data.newTotalPrice;
                    updateGrandTotal();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => alert('Có lỗi xảy ra!'));
    }

    // Update grand total price
    function updateGrandTotal() {
        let grandTotal = 0;
        // Calculate item total
        document.querySelectorAll('.quantity-input').forEach(input => {
            const itemId = input.getAttribute('data-item-id');
            const quantity = parseInt(input.value);
            const price = parseFloat(document.querySelector(`#cart-item-${itemId} td:nth-child(3)`).textContent.replace(/[^0-9.-]+/g, ""));
            grandTotal += price * quantity;
        });

        // Calculate transport total
        document.querySelectorAll('.transport-table tbody tr').forEach(row => {
            const transportPrice = parseFloat(row.querySelector('td:nth-child(13)').textContent.replace(/[^0-9.-]+/g, ""));
            grandTotal += transportPrice;
        });

        // Update total price on page
        document.getElementById('grand-total').textContent = grandTotal.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
    }
</script>

</html>
